SELECT * FROM EMP
WHERE ename LIKE 'M%';

SELECT * FROM EMP
WHERE ENAME LIKE '_L%';

SELECT * FROM EMP WHERE COMM = NULL;
SELECT * FROM EMP WHERE COMM IS NULL;
SELECT * FROM EMP WHERE MGR IS NULL;

SELECT EMPNO, ENAME, SAL, DEPTNO, JOB
FROM EMP WHERE JOB = 'CLERK'
UNION
SELECT EMPNO, ENAME, SAL, DEPTNO, JOB 
FROM EMP WHERE JOB = 'SALESMAN';

SELECT EMPNO, ENAME, SAL, DEPTNO, JOB
FROM EMP WHERE DEPTNO = 10
UNION
SELECT EMPNO, ENAME, SAL, DEPTNO, JOB 
FROM EMP WHERE DEPTNO = 10;

SELECT EMPNO, ENAME, SAL, DEPTNO, JOB
FROM EMP WHERE DEPTNO = 10
UNION ALL
SELECT EMPNO, ENAME, SAL, DEPTNO, JOB 
FROM EMP WHERE DEPTNO = 10;

SELECT EMPNO, ENAME, SAL, DEPTNO, JOB
FROM EMP
MINUS
SELECT EMPNO, ENAME, SAL, DEPTNO, JOB 
FROM EMP WHERE DEPTNO = 10;

SELECT EMPNO, ENAME, SAL, DEPTNO, JOB
FROM EMP
INTERSECT
SELECT EMPNO, ENAME, SAL, DEPTNO, JOB 
FROM EMP WHERE DEPTNO = 10;

SELECT * FROM v$sqlfn_metadata;
SELECT func_id,argnum,datatype FROM v$sqlfn_arg_metadata;
SELECT * FROM v$sqlfn_metadata WHERE datatype = 'STRING';

SELECT ENAME, UPPER(ENAME),LOWER(ENAME),INITCAP(ENAME)
FROM EMP;

SELECT * FROM EMP
WHERE UPPER(ENAME) = UPPER('scott');

SELECT ENAME,JOB,MGR,DEPTNO FROM EMP
WHERE UPPER(ENAME) LIKE UPPER('%c%');

SELECT ENAME, LENGTH(ENAME) FROM EMP;
SELECT ENAME, LENGTH(ENAME) FROM EMP
WHERE LENGTH(ENAME)>=5;

SELECT JOB
,SUBSTR(JOB,1,2),SUBSTR(JOB,3,2),SUBSTR(JOB,5)
FROM EMP;

SELECT JOB
,SUBSTR(JOB,-LENGTH(JOB)),SUBSTR(JOB, - LENGTH(JOB),2),SUBSTR(JOB,-3)
FROM EMP;

SELECT * FROM EMP
WHERE INSTR(ENAME, 'S')>0;

SELECT INSTR('HELLO ORACLE!','L') AS INSTR_1
,INSTR('HELLO ORACLE!','L',5) AS INSTR_2
,INSTR('HELLO ORACLE!','L',2,2) AS INSTR_3 --2번째 글자부터 2번째 L이 나오는
FROM DUAL;

SELECT '010-1234-5678' AS REPLACE_BEFORE
,REPLACE('010-1234-5678','-','') AS REPLACE_1
,REPLACE('010-1234-5678','-') AS REPLACE_2
FROM DUAL;

SELECT 'ORACLE', LPAD('ORACLE', 10, '#') AS LPAD_1
,RPAD('ORACLE', 10, '*') AS RPAD_1
,LPAD('ORACLE', 10) AS LPAD_2
,RPAD('ORACLE', 10) AS RPAD_2
FROM DUAL;

SELECT RPAD('971225-',14,'*') AS RPAD_JMNO
,RPAD('010-1234-',13,'*') AS RPAD_PHONE
FROM DUAL;

SELECT EMPNO, ENAME, CONCAT(EMPNO,ENAME),
CONCAT(EMPNO, CONCAT(':', ENAME))
FROM EMP
WHERE ENAME = 'SMITH';

SELECT '['||TRIM(' _ _ORACLE_ _ ')||']'AS TRIM,
'['||TRIM(LEADING FROM ' _ _ORACLE_ _ ')||']' AS TRIM_LEADING,
'['||TRIM(TRAILING FROM ' _ _ORACLE_ _ ')||']' AS TRIM_TRAILING,
'['||TRIM(BOTH FROM ' _ _ORACLE_ _ ')||']' AS TRIM_BOTH
FROM DUAL;


SELECT '['||TRIM(' _ORACLE_ ')||']' AS TRIM,
'['||LTRIM(' _ORACLE_ ')||']' AS LTRIM,
'['||LTRIM('<_ORACLE_>', '_<')||']' AS LTRIM2,
'['||RTRIM(' _ORACLE_ ')||']' AS RTRIM,
'['||RTRIM('<_ORACLE_>','>_')||']' AS RTRIM2
FROM DUAL;


SELECT ROUND(1234.5678) AS R,
ROUND(1234.5678,0) AS R_1,
ROUND(1234.5678,1) AS R_2,
ROUND(1234.5678,2) AS R_3,
ROUND(1234.5678,-1) AS RMINUS_1,
ROUND(1234.5678,-2) AS RMINUS_2
FROM DUAL;

SELECT TRUNC(1234.5678) AS TRUNC,
TRUNC(1234.5678, 0) AS TRUNC1,
TRUNC(1234.5678,1) AS TRUNC2,
TRUNC(1234.5678,-1) AS TRUNC3,
TRUNC(1234.5678,-2) AS TRUNC4
FROM DUAL;

SELECT CEIL(3.14) AS CEIL,
FLOOR(3.14) AS FLOOR,
CEIL(-3.14) AS CEILM,
FLOOR(-3.14) AS FLOORM
FROM DUAL;

SELECT MOD(15,6),
MOD(10,2),
MOD(11,2)
FROM DUAL;

SELECT POWER(3,2),POWER(-3,3)
FROM DUAL;

SELECT SIGN(-100), SIGN(100), SIGN(0)
FROM DUAL;

SELECT REMAINDER(15,4) AS C1
,REMAINDER(15,-4) AS C2
,REMAINDER(-11,4) AS C3
,REMAINDER(-11,-4) AS C4
FROM DUAL;


SELECT SYSDATE AS NOW
,SYSDATE-1 AS YESTERDAY
,SYSDATE+1 AS TOMORROW
FROM DUAL;

SELECT SYSDATE, ADD_MONTHS(SYSDATE,3)
FROM DUAL;

SELECT EMPNO, ENAME, HIREDATE,
ADD_MONTHS(HIREDATE,12*20) AS WORK10YEAR
FROM EMP;

SELECT EMPNO, ENAME, HIREDATE, SYSDATE
FROM EMP
WHERE ADD_MONTHS(HIREDATE, 12*40)>SYSDATE ; 


SELECT ENAME, HIREDATE, SYSDATE 
,MONTHS_BETWEEN(HIREDATE, SYSDATE)/12 AS YEAR1
,MONTHS_BETWEEN(SYSDATE, HIREDATE)/12 AS YEAR2
,TRUNC(MONTHS_BETWEEN(SYSDATE, HIREDATE)/12) AS YEAR3
FROM EMP;

SELECT SYSDATE
,NEXT_DAY(SYSDATE, '화요일')
,LAST_DAY(SYSDATE)
FROM DUAL;

SELECT ENAME
,EXTRACT(YEAR FROM HIREDATE) AS Y
,EXTRACT(MONTH FROM HIREDATE) AS M
,EXTRACT(DAY FROM HIREDATE) AS D
FROM EMP;

SELECT SYSDATE
, ROUND(SYSDATE, 'CC') AS CC
, ROUND(SYSDATE, 'YYYY') AS YYYY
, ROUND(SYSDATE, 'Q') AS Q
, ROUND(SYSDATE, 'DDD') AS DDD
, ROUND(SYSDATE, 'HH') AS HH
FROM DUAL;

SELECT EMPNO,ENAME,EMPNO + '500'
FROM EMP
WHERE ENAME = 'SCOTT';

SELECT 1300- '1500', '1300' +1500
FROM DUAL;

SELECT '1,300' - '1,500'
FROM DUAL; --오류

SELECT TO_NUMBER('1,500', '9,999')-1300
FROM DUAL;

SELECT 'ABCD' + EMPNO, EMPNO
FROM EMP
WHERE ENE = 'SCOTT'; --오류

SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS') AS CURRENT_DATETIME
FROM DUAL;

SELECT SYSDATE 
,TO_CHAR(SYSDATE,'MM') AS MM
,TO_CHAR(SYSDATE,'MON') AS MON
,TO_CHAR(SYSDATE,'MONTH') AS MONTH
,TO_CHAR(SYSDATE,'DD') AS DD
,TO_CHAR(SYSDATE,'DY') AS DY
,TO_CHAR(SYSDATE,'DAY') AS DAY
FROM DUAL;

SELECT SYSDATE 
,TO_CHAR(SYSDATE, 'MM') AS MM
,TO_CHAR(SYSDATE, 'MON','NLS_DATE_LANGUAGE = JAPANESE') AS MON_JPN
FROM DUAL;

SELECT SYSDATE 
,TO_CHAR(SYSDATE, 'HH24:MI:SS') AS HH24MISS
FROM DUAL;

SELECT TO_NUMBER('3,300','999,999') - TO_NUMBER('1,100','999,999')
FROM DUAL;

SELECT TO_DATE('2023-02-15', 'YYYY-MM-DD') AS TODATE1 
,TO_DATE('20150101', 'YYYY-MM-DD') AS TODATE2
FROM DUAL;

SELECT * FROM EMP
WHERE HIREDATE >TO_DATE('1981/07/01','YYYY/MM/DD');

SELECT TO_DATE('49/12/10', 'YY/MM/DD') AS YY_YEAR_49
,TO_DATE('59/12/10', 'RR/MM/DD') AS RR_YEAR_59
FROM DUAL;

SELECT EMPNO,ENAME,SAL,COMM,SAL+COMM
,NVL(COMM,0)
,SAL+NVL(COMM,0)
FROM EMP;

SELECT EMPNO,ENAME,COMM
,NVL2(COMM,'O','X')
,NVL2(COMM,SAL*12+COMM,SAL*12) AS ANNSAL
FROM EMP;

SELECT EMPNO,ENAME,JOB,SAL
,DECODE(JOB,
			'MANAGER',SAL*0.2
			,'SALESMAN',SAL*0.3
			,'ANALYST',SAL*0.05,
			SAL*0.1) AS BONUS
FROM EMP;

SELECT EMPNO, ENAME, JOB, SAL
,CASE JOB
			WHEN 'MANAGER' THEN SAL*0.2
			WHEN 'SALESMAN' THEN SAL *0.3
			ELSE SAL * 0.1
			END AS BONUS
FROM EMP;

SELECT EMPNO, ENAME, COMM
		,CASE
				WHEN COMM IS NULL THEN ''
				WHEN COMM = 0 THEN 'ZERO'
				WHEN COMM > 0 THEN 'AMMONUT :'|| COMM
		END AS SUMMARY
FROM EMP;

SELECT SUM(SAL)
FROM EMP;

SELECT ENAME, SUM(SAL)
FROM EMP; --오류

SELECT SUM(COMM)
FROM EMP;

SELECT SUM(DISTINCT SAL)
		,SUM(ALL SAL)
		,SUM(SAL)
FROM EMP;
		
SELECT COUNT(*) FROM EMP;

SELECT COUNT(COMM) FROM EMP;

SELECT COUNT(*) FROM EMP WHERE DEPTNO = 10;

SELECT COUNT(DISTINCT SAL), COUNT(ALL SAL), COUNT(SAL)
FROM EMP;

SELECT COUNT(ENAME) FROM EMP WHERE COMM IS NOT NULL;

SELECT MAX(SAL) FROM EMP WHERE DEPTNO = 30;
SELECT MIN(SAL) FROM EMP WHERE DEPTNO = 30;
SELECT MAX(HIREDATE) FROM EMP WHERE DEPTNO = 30;
SELECT MIN(HIREDATE) FROM EMP WHERE DEPTNO = 30;

SELECT AVG(SAL) FROM EMP WHERE DEPTNO = 30;

SELECT AVG(DISTINCT SAL) FROM EMP WHERE DEPTNO = 30;

SELECT AVG(SAL), '10' AS DEPTNO FROM EMP WHERE DEPTNO = 10
UNION ALL
SELECT AVG(SAL), '20' AS DEPTNO FROM EMP WHERE DEPTNO = 20
UNION ALL 
SELECT AVG(SAL), '30' AS DEPTNO FROM EMP WHERE DEPTNO = 30;

SELECT AVG(SAL), DEPTNO
FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB 
ORDER BY DEPTNO, JOB;

SELECT ENAME, DEPTNO, AVG(SAL)
FROM EMP
GROUP BY DEPTNO; --ERROR

SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
HAVING AVG(SAL)>=2000
ORDER BY DEPTNO, JOB;

SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB 
ORDER BY DEPTNO, JOB;

SELECT DEPTNO, ENAME
FROM EMP
GROUP BY DEPTNO, ENAME;

SELECT DEPTNO
		,LISTAGG(ENAME, ', ')
		WITHIN GROUP(ORDER BY SAL DESC) AS ENAMES
FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO, JOB, MAX(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO, JOB;

SELECT *
FROM (SELECT DEPTNO, JOB, SAL
		FROM EMP)
PIVOT(MAX(SAL) FOR DEPTNO IN (10,20,30))
ORDER BY JOB;

SELECT *
FROM (SELECT JOB, DEPTNO, SAL
		FROM EMP)
PIVOT (MAX(SAL)
		FOR JOB IN ('CLERK' AS CLERK,
					'SALESMAN' AS SALSEMAN,
					'PRESIDENT' AS PRESIDENT,
					'MANAGER' AS MANAGER,
					'ANALYST' AS ANALYST)
					)
ORDER BY DEPTNO;

SELECT DEPTNO
		,MAX(DECODE(JOB, 'CLERK', SAL))AS "CLERK"
		,MAX(DECODE(JOB, 'SALESMAN', SAL))AS "SALESMAN"
		,MAX(DECODE(JOB, 'PRESIDENT', SAL))AS "PRESIDENT"
		,MAX(DECODE(JOB, 'MANAGER', SAL))AS "MANAGER"
		,MAX(DECODE(JOB, 'ANALYST', SAL))AS "ANALYST"
FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO;

SELECT *
FROM (SELECT DEPTNO
		,MAX(DECODE(JOB, 'CLERK', SAL))AS "CLERK"
		,MAX(DECODE(JOB, 'SALESMAN', SAL))AS "SALESMAN"
		,MAX(DECODE(JOB, 'PRESIDENT', SAL))AS "PRESIDENT"
		,MAX(DECODE(JOB, 'MANAGER', SAL))AS "MANAGER"
		,MAX(DECODE(JOB, 'ANALYST', SAL))AS "ANALYST"
FROM EMP
GROUP BY DEPTNO 
ORDER BY DEPTNO)
UNPIVOT (SAL FOR JOB IN (CLERK, SALESMAN, PRESIDENT, MANAGER,ANALYST)
	)
	ORDER BY DEPTNO, JOB;


SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL)
FROM EMP
GROUP BY ROLLUP(DEPTNO, JOB);

SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL)
FROM EMP
GROUP BY CUBE(DEPTNO, JOB)
ORDER BY DEPTNO, JOB;

SELECT DEPTNO, JOB, COUNT(*)
FROM EMP
GROUP BY DEPTNO, ROLLUP(JOB);

SELECT DEPTNO, JOB, COUNT(*)
FROM EMP
GROUP BY JOB, ROLLUP(DEPTNO); --반복해서 보기

SELECT DEPTNO, JOB, COUNT(*)
FROM EMP
GROUP BY GROUPING SETS(DEPTNO, JOB)
ORDER BY DEPTNO, JOB;

SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL), GROUPING(DEPTNO), GROUPING(JOB)
FROM EMP
GROUP BY CUBE(DEPTNO, JOB)
ORDER BY DEPTNO, JOB;

SELECT DEPTNO, JOB, COUNT(*), SUM(SAL), GROUPING(DEPTNO), GROUPING(JOB), GROUPING_ID(DEPTNO,JOB)
FROM EMP
GROUP BY CUBE(DEPTNO, JOB)
ORDER BY DEPTNO, JOB;

--SCOTT SCHEMA

SELECT *
FROM EMP, DEPT
ORDER BY EMPNO --ERROR;

SELECT *
FROM EMP E, DEPT D
WHERE ENAME = 'MILLER' ORDER BY EMPNO;

SELECT *
FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO 
ORDER BY EMPNO;

SELECT *
FROM EMP E JOIN DEPT d 
ON (E.DEPTNO = D.DEPTNO)
ORDER BY EMPNO;

SELECT *
FROM EMP e JOIN DEPT d 
USING(DEPTNO)
ORDER BY E.EMPNO ;

SELECT *
FROM EMP e , DEPT d 
WHERE E.DEPTNO = D.DEPTNO 
ORDER BY EMPNO;

SELECT EMPNO, ENAME, DEPTNO, DNAME, LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;

SELECT E.EMPNO , E.ENAME , D.DEPTNO , D.DNAME , D.LOC 
FROM EMP e , DEPT d 
WHERE E.DEPTNO = D.DEPTNO 
ORDER BY D.DEPTNO , E.EMPNO ;


SELECT E.EMPNO , E.ENAME , E.SAL , D.DEPTNO , D.DNAME , D.LOC 
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO 
AND SAL < 2000;

SELECT E1.EMPNO
	  ,E1.MGR
	  ,E2.EMPNO AS MGR_EMPNO
	  ,E2.ENAME AS MGR_ENAME
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO;

--LEFT JOIN

SELECT E1.EMPNO 
	  ,E1.ENAME 
	  ,E2.EMPNO AS MGR_EMPNO
	  ,E2.ENAME AS MGR_ENAME
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO(+) --왼쪽조인하는 경우 오른편에 + 추가
ORDER BY E1.EMPNO ;


SELECT E1.EMPNO
	  ,E1.ENAME 
	  ,E1.MGR 
	  ,E2.EMPNO AS MGR_EMPNO
	  ,E2.ENAME AS MGR_ENAME
FROM EMP E1 LEFT OUTER JOIN EMP E2
		ON (E1.MGR = E2.EMPNO)
ORDER BY E1.EMPNO;

--RIGHT JOIN
SELECT E1.EMPNO 
	  ,E1.ENAME
	  ,E1.MGR 
	  ,E2.EMPNO AS MGR_EMPNO
	  ,E2.ENAME AS MGR_ENAME
FROM EMP E1, EMP E2
WHERE E1.MGR(+) = E2.EMPNO 
ORDER BY E1.EMPNO;


SELECT E1.EMPNO 
	  ,E1.ENAME
	  ,E1.MGR 
	  ,E2.EMPNO AS MGR_EMPNO
	  ,E2.ENAME AS MGR_ENAME
FROM EMP E1 RIGHT OUTER JOIN EMP E2
		 ON (E1.MGR(+) = E2.EMPNO) 
ORDER BY E1.EMPNO, MGR_EMPNO;

--FULL OUTER JOIN
SELECT E1.EMPNO 
	  ,E1.ENAME
	  ,E1.MGR 
	  ,E2.EMPNO AS MGR_EMPNO
	  ,E2.ENAME AS MGR_ENAME
FROM EMP E1 FULL OUTER JOIN EMP E2
		 ON (E1.MGR = E2.EMPNO) 
ORDER BY E1.EMPNO;

SELECT E1.EMPNO --오라클 양쪽정렬 불가
	  ,E1.ENAME
	  ,E1.MGR 
	  ,E2.EMPNO AS MGR_EMPNO
	  ,E2.ENAME AS MGR_ENAME
FROM EMP E1, EMP E2
WHERE E1.MGR(+) = E2.EMPNO(+)
ORDER BY E1.EMPNO;
















