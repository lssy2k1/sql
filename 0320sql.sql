Rem Copyright (c) 1990 by Oracle Corporation
Rem NAME
REM    UTLSAMPL.SQL
Rem  FUNCTION
Rem  NOTES
Rem  MODIFIED
Rem	gdudey	   06/28/95 -  Modified for desktop seed database
Rem	glumpkin   10/21/92 -  Renamed from SQLBLD.SQL
Rem	blinden   07/27/92 -  Added primary and foreign keys to EMP and DEPT
Rem	rlim	   04/29/91 -	      change char to varchar2
Rem	mmoore	   04/08/91 -	      use unlimited tablespace priv
Rem	pritto	   04/04/91 -	      change SYSDATE to 13-JUL-87
Rem   Mendels	 12/07/90 - bug 30123;add to_date calls so language independent
Rem
rem
rem $Header: utlsampl.sql 7020100.1 94/09/23 22:14:24 cli Generic<base> $ sqlbld.sql
rem
SET TERMOUT OFF
SET ECHO OFF

rem CONGDON    Invoked in RDBMS at build time.	 29-DEC-1988
rem OATES:     Created: 16-Feb-83

GRANT CONNECT,RESOURCE,UNLIMITED TABLESPACE TO test IDENTIFIED BY 1111; --SQL plus로 할 때

GRANT unlimited tablespace TO test;

ALTER USER test DEFAULT TABLESPACE USERS;
ALTER USER test TEMPORARY TABLESPACE TEMP;
ALTER USER test ACCOUNT UNLOCK;--test/1111계정 잠금을 풀어주겠다.

--CONNECT test/1111--지금은 이미 접속을 해놓은 상태라서 연결 불필요.

SELECT * FROM DEPT;

DROP TABLE DEPT;

CREATE TABLE DEPT--EMP테이블에서 REFERENCES로 사용되기 때문에 먼저 만든다.
       (DEPTNO NUMBER(2) CONSTRAINT PK_DEPT PRIMARY KEY,
	DNAME VARCHAR2(14) ,
	LOC VARCHAR2(13) ) ;

INSERT INTO DEPT VALUES
	(10,'ACCOUNTING','NEW YORK');
INSERT INTO DEPT VALUES (20,'RESEARCH','DALLAS');
INSERT INTO DEPT VALUES
	(30,'SALES','CHICAGO');
INSERT INTO DEPT VALUES
	(40,'OPERATIONS','BOSTON');


SELECT * FROM EMP;

DROP TABLE EMP;

CREATE TABLE EMP
       (EMPNO NUMBER(4) CONSTRAINT PK_EMP PRIMARY KEY,
	ENAME VARCHAR2(10),
	JOB VARCHAR2(9),
	MGR NUMBER(4),
	HIREDATE DATE,
	SAL NUMBER(7,2),
	COMM NUMBER(7,2),
	DEPTNO NUMBER(2) CONSTRAINT FK_DEPTNO REFERENCES DEPT);


INSERT INTO EMP VALUES
(7369,'SMITH','CLERK',7902,to_date('17-12-1980','dd-mm-yyyy'),800,NULL,20);
INSERT INTO EMP VALUES
(7499,'ALLEN','SALESMAN',7698,to_date('20-2-1981','dd-mm-yyyy'),1600,300,30);
INSERT INTO EMP VALUES
(7521,'WARD','SALESMAN',7698,to_date('22-2-1981','dd-mm-yyyy'),1250,500,30);
INSERT INTO EMP VALUES
(7566,'JONES','MANAGER',7839,to_date('2-4-1981','dd-mm-yyyy'),2975,NULL,20);
INSERT INTO EMP VALUES
(7654,'MARTIN','SALESMAN',7698,to_date('28-9-1981','dd-mm-yyyy'),1250,1400,30);
INSERT INTO EMP VALUES
(7698,'BLAKE','MANAGER',7839,to_date('1-5-1981','dd-mm-yyyy'),2850,NULL,30);
INSERT INTO EMP VALUES
(7782,'CLARK','MANAGER',7839,to_date('9-6-1981','dd-mm-yyyy'),2450,NULL,10);
INSERT INTO EMP VALUES
(7788,'SCOTT','ANALYST',7566,to_date('13-7-1987','dd-mm-yyyy')-85,3000,NULL,20);
INSERT INTO EMP VALUES
(7839,'KING','PRESIDENT',NULL,to_date('17-11-1981','dd-mm-yyyy'),5000,NULL,10);
INSERT INTO EMP VALUES
(7844,'TURNER','SALESMAN',7698,to_date('8-9-1981','dd-mm-yyyy'),1500,0,30);
INSERT INTO EMP VALUES
(7876,'ADAMS','CLERK',7788,to_date('13-7-1987','dd-mm-yyyy')-51,1100,NULL,20);
INSERT INTO EMP VALUES
(7900,'JAMES','CLERK',7698,to_date('3-12-1981','dd-mm-yyyy'),950,NULL,30);
INSERT INTO EMP VALUES
(7902,'FORD','ANALYST',7566,to_date('3-12-1981','dd-mm-yyyy'),3000,NULL,20);
INSERT INTO EMP VALUES
(7934,'MILLER','CLERK',7782,to_date('23-1-1982','dd-mm-yyyy'),1300,NULL,10);


DROP TABLE BONUS;
CREATE TABLE BONUS
	(
	ENAME VARCHAR2(10)	,
	JOB VARCHAR2(9)  ,
	SAL NUMBER,
	COMM NUMBER
	) ;
SELECT * FROM BONUS;


DROP TABLE SALGRADE;
CREATE TABLE SALGRADE
      ( GRADE NUMBER,
	LOSAL NUMBER,
	HISAL NUMBER );
SELECT * FROM SALGRADE;

INSERT INTO SALGRADE VALUES (1,700,1200);
INSERT INTO SALGRADE VALUES (2,1201,1400);
INSERT INTO SALGRADE VALUES (3,1401,2000);
INSERT INTO SALGRADE VALUES (4,2001,3000);
INSERT INTO SALGRADE VALUES (5,3001,9999);
COMMIT;

SET TERMOUT ON
SET ECHO ON







SELECT EMPNO AS EMPLOYEE_NO
	 , ENAME AS EMPLOYEE_NAME
	 , JOB
	 , MGR AS MANAGER
	 , HIREDATE
	 , SAL AS SALARY
	 , COMM AS COMMISSION
	 , DEPTNO AS DEPARTMENT_NO
FROM EMP;

SELECT * FROM EMP
WHERE COMM IS NULL
AND SAL > NULL;

SELECT E.EMPNO 
	  ,E.ENAME 
	  ,E.JOB 
	  ,E.DEPTNO 
	  ,E.SAL 
FROM EMP e
WHERE MGR IS NULL
AND COMM IS NULL;


SELECT *
FROM EMP
WHERE ENAME LIKE '%S';

SELECT *
FROM EMP
WHERE JOB = 'SALESMAN'
AND DEPTNO = '30';

SELECT *
FROM EMP
WHERE DEPTNO IN (20,30)
AND SAL > 2000;

SELECT *
FROM EMP e 
WHERE E.MGR IS NOT NULL 
AND E.JOB IN ('MANAGER', 'CLERK')
AND E.ENAME NOT LIKE '_L%';

SELECT E.EMPNO 
	  ,E.ENAME
	  ,RPAD(SUBSTR(E.EMPNO,1,2), LENGTH(E.EMPNO), '*') AS "EMPNO 마스킹 처리"
	  ,RPAD(SUBSTR(E.ENAME,1,1), LENGTH(E.ENAME), '*') AS "ENAME 마스킹 처리"
FROM EMP E
WHERE LENGTH(ENAME) >= 6;

SELECT EMPNO, ENAME, JOB, SAL
	  ,(SAL / 20) AS DAY_PER_SAL
	  ,(SAL / 20 / 8) AS HOUR_PER_SAL
FROM EMP
WHERE JOB IN ('SALESMAN', 'CLERK')
ORDER BY SAL;

SELECT EMPNO, ENAME
	  ,NEXT_DAY(ADD_MONTHS(HIREDATE, 3), '월요일') AS HIREDATE
	  ,NVL(TO_CHAR(COMM), 'N/A') AS COMM
FROM EMP;

SELECT empno, ename, mgr,
	CASE
		WHEN MGR IS NULL THEN 0000
		WHEN SUBSTR(MGR,1,2)=75 THEN 5555
		WHEN SUBSTR(MGR,1,2)=76 THEN 6666
		WHEN SUBSTR(MGR,1,2)=77 THEN 7777
		WHEN SUBSTR(MGR,1,2)=78 THEN 8888
		ELSE 9999
	END AS CHG_MGR
FROM EMP;
	

-----------------

SELECT *
FROM v$sqlfn_metadata v
WHERE v.name = 'NVL'

SELECT ENAME 
	, UPPER(ENAME) AS TO_UPPER_NAME
	, LOWER(ENAME) AS TO_LOWER_NAME
FROM EMP;


SELECT *
FROM EMP
WHERE UPPER(ENAME) = UPPER('SCOtt');


SELECT '['||TRIM('   _ _ ORACLE _ _   ')||']'AS TRIM
FROM DUAL;

SELECT TRIM(ENAME)
FROM EMP;

SELECT EMPNO
	  ,ENAME
	  ,CONCAT(EMPNO, ENAME)
	  ,CONCAT(EMPNO, ' : ')
FROM EMP
WHERE ENAME = :NAME
;
--WHERE ENAME = UPPER('SMITH')

SELECT '010-1212-1212' AS MOBILE_PHONE
		,REPLACE('010-1212-1212', '-','') AS MOBILEPHONE
FROM DUAL;

SELECT LPAD('ORACLE', 20) AS LPAD_20
	  ,RPAD('ORACLE', 20) AS RPAD_20
FROM DUAL;

SELECT RPAD ('971223-', 14, '*') AS RPAD_JMNO
	  ,RPAD('010-3333-', 13, '*') AS RPAD_PHONE
FROM DUAL;

SELECT LPAD('ORA_1234_XE', 20) AS LPAD_20 --공백을 왼쪽에 삽입
	  ,RPAD('ORA_1234_XE', 20) AS RPAD_20
FROM DUAL;


SELECT *
FROM EMP E
WHERE E.EMPNO >= :INPUT_NO --값을 입력받아서 처리하게 됨.
;

SELECT ROUND(1234.5678) AS R,
	   ROUND(1234.5678,0) AS R1,
	   ROUND(1234.5678,1) AS R2,
	   ROUND(1234.5678,2) AS R3,
	   ROUND(1234.5678,-1) AS R4,
	   ROUND(1234.5678,-2) AS R5
FROM DUAL;

SELECT TRUNC(1234.5678 , 0) AS T0
	  ,TRUNC(1234.5678 , 1) AS T1
	  ,TRUNC(1234.5678 , 2) AS T2
	  ,TRUNC(1234.5678 , -1) AS T3
	  ,TRUNC(1234.5678 , -2) AS T4
FROM DUAL;


SELECT MOD(15,6)
	  ,MOD(10,2)
	  ,MOD(11,2)
FROM DUAL;

SELECT POWER(3,2), POWER(-3,2)
FROM DUAL;

SELECT REMAINDER(15,4) AS C1
	  ,REMAINDER(15,-4) AS C2
	  ,REMAINDER(-11,4) AS C3
	  ,REMAINDER(-11,-4) AS C4
FROM DUAL;


SELECT SYSDATE AS NOW
		,SYSDATE -1 AS YESETERDAY
		,SYSDATE +10 AS TOMORROW
		,SYSDATE -1/24 AS BEFORESECOND
FROM DUAL;

SELECT SYSDATE , ADD_MONTHS(SYSDATE, 3)
FROM DUAL;

SELECT EMPNO, ENAME, HIREDATE,
		ADD_MONTHS(HIREDATE, 12*20) AS WORK20YEAR
FROM EMP;


SELECT ADD_MONTHS(SYSDATE, :MONTH)
FROM DUAL;

SELECT ENAME
		,HIREDATE
		,MONTHS_BETWEEN(HIREDATE, SYSDATE)
		,TRUNC(MONTHS_BETWEEN(SYSDATE,HIREDATE) / 12) --뒷 날짜를 앞에 쓰는게 좋음.
FROM EMP;


SELECT SYSDATE AS NOW
		,NEXT_DAY(SYSDATE, '월요일') AS "NEXT 월요일"
FROM DUAL;


SELECT SYSDATE 
	  ,ROUND(SYSDATE, 'CC') AS FORMAT_CC
	  ,ROUND(SYSDATE, 'YYYY') AS FORMAT_YYYY
	  ,ROUND(SYSDATE, 'Q') AS FORMAT_Q
	  ,ROUND(SYSDATE, 'DDD') AS FORMAT_DDD
	  ,ROUND(SYSDATE, 'HH') AS FORMAT_HH
FROM DUAL;


SELECT EMPNO, DEPTNO
FROM EMP
WHERE DEPTNO = '20';


SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS') AS CURRENT_DATETIME
FROM DUAL;

SELECT SYSDATE 
	  ,TO_CHAR(SYSDATE, 'MM') AS MM
	  ,TO_CHAR(SYSDATE, 'MON') AS MON
	  ,TO_CHAR(SYSDATE, 'MONTH') AS MONTH
	  ,TO_CHAR(SYSDATE, 'DD') AS DD
	  ,TO_CHAR(SYSDATE, 'DY') AS DY
	  ,TO_CHAR(SYSDATE, 'DAY') AS DAY
FROM DUAL;

SELECT SYSDATE 
	  ,TO_CHAR(SYSDATE, 'MM') AS MM
	  ,TO_CHAR(SYSDATE, 'MON', 'NLS_DATE_LANGUAGE = KOREAN') AS MM_KOR
	  ,TO_CHAR(SYSDATE, 'MON', 'NLS_DATE_LANGUAGE = ENGLISH') AS MM_ENG
	  ,TO_CHAR(SYSDATE, 'MON', 'NLS_DATE_LANGUAGE = JAPANESE') AS MM_JPN
	  ,TO_CHAR(SYSDATE, 'MONTH', 'NLS_DATE_LANGUAGE = KOREAN') AS MM_KOR
	  ,TO_CHAR(SYSDATE, 'MONTH', 'NLS_DATE_LANGUAGE = ENGLISH') AS MM_ENG
	  ,TO_CHAR(SYSDATE, 'MONTH', 'NLS_DATE_LANGUAGE = FRENCH') AS MM_FRN
FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24')
FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'DD HH24:MI:SS')
FROM DUAL;

SELECT TO_NUMBER('111,000,000.999', '999,999,999.999')
FROM DUAL;--자리수 포맷을 999,999,999로 나타낸다.

SELECT TO_DATE('20230317', 'YYYYMMDD HH24:MI')
FROM DUAL;


SELECT TO_DATE('49/12/31', 'RR/MM/DD')
	  ,TO_DATE('49/12/01', 'YY/MM/DD')
	  ,TO_DATE('50/02/01', 'RR/MM/DD')
	  ,TO_DATE('50/02/01', 'YY/MM/DD')
	  ,TO_DATE('99/12/01', 'RR/MM/DD')
	  ,TO_DATE('99/12/01', 'YY/MM/DD')
FROM DUAL;


SELECT EMPNO
	  ,ENAME
	  ,SAL
	  ,COMM
	  ,SAL+COMM
	  ,NVL(COMM,0)
	  ,SAL+NVL(COMM,0)
FROM EMP;

SELECT EMPNO
	  ,ENAME
	  ,COMM
	  ,NVL2(COMM,'O','X')
	  ,NVL2(COMM,SAL*12 + COMM, SAL*12) AS ANNSAL
FROM EMP;


SELECT EMPNO
	  ,ENAME
	  ,JOB
	  ,SAL
	  ,CASE JOB
	  			WHEN 'MANAGER' THEN SAL *0.2
	  			WHEN 'SALESMAN' THEN SAL * 0.3
	  			WHEN 'ANALYST' THEN SAL * 0.05
	  			ELSE SAL * 0.1
	  			END AS BONUS
	  ,DECODE(JOB,
	  			 'MANAGER', SAL * 0.2,
	  			 'SALESMAN', SAL * 0.3,
	  			 'ANALYST', SAL * 0.05,
	  			 SAL * 0.1) AS BONUS2
FROM EMP;



SELECT EMPNO
	  ,ENAME
	  ,JOB
	  ,SAL
	  ,DECODE(JOB,
	  			 'MANAGER', SAL * 0.2,
	  			 'SALESMAN', SAL * 0.3,
	  			 'ANALYST', SAL * 0.05,
	  			 SAL * 0.1) AS BONUS2
FROM EMP;





