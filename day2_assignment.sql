/*
 * Q2-1 (1)테이블 (2)외래 키(FK, Foreign Key) (3)널(NULL) 
 * Q2-2 (1)문자셋(CharacterSet) (2)문자셋(CharSet)
 * Q2-3 (1)VARCHAR2 (2)CHAR
 * Q2-4 (1)제약 조건 (2)기본키(Primary Key, PK) (3)외래키(Foreign Key)
 * Q2-5 (1)무결성(Integrity) (2)무결성 (3)무결성
 * Q2-6 (1)Unique (2)Not Null (3)Index 
 * 
 */


--실습과제 1-1

SELECT E.DEPTNO
	  ,TRUNC(AVG(E.SAL)) AS AVG_SAL
	  ,MAX(E.SAL) AS MAX_SAL
	  ,MIN(E.SAL) AS MIN_SAL
	  ,COUNT(E.EMPNO) AS CNT
FROM EMP e ,dept D
WHERE e.DEPTNO =d.DEPTNO
GROUP BY e.DEPTNO
;


--1-2

SELECT E.JOB
	  ,COUNT(*)
FROM EMP E
GROUP BY E.JOB
HAVING COUNT(*) >= 3;


 --1-3

SELECT TO_CHAR(HIREDATE, 'YYYY') AS HIRE_YEAR
	  ,DEPTNO
	  ,COUNT(EMPNO) AS CNT
FROM EMP
GROUP BY TO_CHAR(HIREDATE, 'YYYY')
		,DEPTNO
;


 --1-4

SELECT NVL2(COMM, 'Y', 'N') AS EXIST_COMM
	  ,COUNT(*) AS CNT
FROM EMP
GROUP BY NVL2(COMM, 'Y', 'N')
;


--SELECT
--CASE 
--	WHEN E.COMM IS NOT NULL THEN 'Y' 
--	ELSE 'N'
--	END AS EXIST_COMM
--	,COUNT(*) AS CNT
--FROM EMP E
--GROUP BY CASE 
--			 WHEN E.COMM IS NOT NULL THEN 'Y' 
--			 ELSE 'N' 
--			 END;
--;


--1-5

SELECT d.DEPTNO
	  ,TO_CHAR(e.HIREDATE,'YYYY') AS HIRE_YEAR
	  ,COUNT(*) AS CNT
	  ,MAX(E.SAL) AS MAX_SAL
	  ,SUM(E.SAL) AS SUM_SAL
	  ,AVG(E.SAL) AS AVG_SAL
FROM EMP e , DEPT d 
WHERE E.DEPTNO = D.DEPTNO 
GROUP BY ROLLUP(d.DEPTNO, TO_CHAR(e.HIREDATE, 'YYYY'))
;


--실습과제 2-1 (1)오라클 SQL

SELECT D.DEPTNO 
      ,D.DNAME 
      ,E.EMPNO 
      ,E.ENAME 
      ,E.SAL 
FROM EMP e , DEPT d 
WHERE E.DEPTNO =D.DEPTNO 
AND SAL > 2000;


--2-1 (2)표준 SQL

SELECT D.DEPTNO 
      ,D.DNAME 
      ,E.EMPNO 
      ,E.ENAME 
      ,E.SAL 
FROM EMP e JOIN DEPT d 
		   ON (E.DEPTNO = D.DEPTNO)
WHERE SAL > 2000;


--2-2

SELECT DEPTNO
	  ,DNAME
	  ,TRUNC(AVG(SAL)) AS AVG_SAL
	  ,MAX(SAL) AS MAX_SAL
	  ,MIN(SAL) AS MIN_SAL
	  ,COUNT(DEPTNO) AS CNT
FROM EMP NATURAL JOIN DEPT
GROUP BY DEPTNO , DNAME
;


--2-3

SELECT D.DEPTNO 
	  ,D.DNAME 
	  ,E.EMPNO
	  ,E.ENAME 
	  ,E.JOB 
	  ,E.SAL 
FROM EMP e , DEPT d 
WHERE E.DEPTNO(+) = D.DEPTNO 
;


--2-4

SELECT D.DEPTNO
	  ,D.DNAME
	  ,E.EMPNO
	  ,E.ENAME
	  ,E.MGR 
	  ,E.SAL 
	  ,E.DEPTNO 
	  ,S.LOSAL 
	  ,S.HISAL 
	  ,S.GRADE 
	  ,E2.EMPNO AS MGR_EMPNO
	  ,E2.ENAME AS MGR_ENAME
FROM EMP e , DEPT d , SALGRADE s , EMP e2 
WHERE E.DEPTNO(+) = D.DEPTNO 
AND E.SAL BETWEEN S.LOSAL(+) AND S.HISAL (+)
AND E.MGR = E2.EMPNO(+)
ORDER BY D.DEPTNO , E.EMPNO
;


--실습과제 3-1

SELECT E.JOB 
	  ,E.EMPNO
	  ,E.ENAME
	  ,E.SAL 
	  ,D.DEPTNO 
	  ,D.DNAME 
FROM EMP e ,DEPT d 
WHERE D.DEPTNO = E.DEPTNO 
AND JOB = (SELECT JOB FROM EMP WHERE ENAME = 'ALLEN')
;


--3-2

SELECT AVG(SAL) FROM EMP

SELECT E.EMPNO
	  ,E.ENAME 
	  ,D.DNAME 
	  ,E.HIREDATE 
	  ,D.LOC 
	  ,E.SAL 
	  ,S.GRADE 
FROM EMP e, DEPT d , SALGRADE s 
WHERE D.DEPTNO = E.DEPTNO 
AND E.SAL BETWEEN S.LOSAL(+) AND S.HISAL(+) 
AND E.SAL > (SELECT AVG(SAL) FROM EMP)
ORDER BY SAL DESC, EMPNO
;


--3-3

SELECT DISTINCT JOB FROM EMP WHERE DEPTNO = 30;
SELECT * FROM EMP WHERE DEPTNO = 10;

SELECT E.EMPNO 
	  ,E.ENAME 
	  ,E.JOB 
	  ,D.DEPTNO 
	  ,D.DNAME 
	  ,D.LOC 
FROM EMP e , DEPT d 
WHERE D.DEPTNO = E.DEPTNO 
AND JOB NOT IN (SELECT JOB FROM EMP WHERE DEPTNO = 30)
AND D.DEPTNO = 10;


--3-4

SELECT E.EMPNO 
	  ,E.ENAME 
	  ,E.SAL 
	  ,S.GRADE
FROM EMP e , DEPT d , SALGRADE s 
WHERE D.DEPTNO = E.DEPTNO 
AND E.SAL BETWEEN S.LOSAL (+) AND S.HISAL (+)
AND SAL > (SELECT MAX(SAL) FROM EMP WHERE JOB = 'SALESMAN')
ORDER BY EMPNO
;


--3-5

SELECT E.EMPNO 
	  ,E.ENAME 
	  ,E.SAL 
	  ,S.GRADE
FROM EMP e , DEPT d , SALGRADE s 
WHERE D.DEPTNO = E.DEPTNO 
AND E.SAL BETWEEN S.LOSAL (+) AND S.HISAL (+)
AND SAL > ALL(SELECT SAL FROM EMP WHERE JOB = 'SALESMAN')
ORDER BY EMPNO
;



